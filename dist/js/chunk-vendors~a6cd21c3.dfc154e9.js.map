{"version":3,"sources":["webpack:///./node_modules/@firebase/storage/dist/index.esm.js","webpack:///./node_modules/@firebase/performance/dist/index.cjs.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js"],"names":["__webpack_require__","r","__webpack_exports__","d","registerStorage","_firebase_app__WEBPACK_IMPORTED_MODULE_0__","_firebase_app__WEBPACK_IMPORTED_MODULE_0___default","n","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","MIN_SAFE_INTEGER","FirebaseStorageError","code","message","this","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","opt_contentType","contentType","dataFromString","string","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","parts","s","end","longEnough","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","contains","obj","prop","hasOwnProperty","call","forEach","f","key","clone","val","make","resolver","Promise","resolve","value","reject","error","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","addEventListener","event","ABORT","NETWORK_ERROR","send","method","opt_body","opt_headers","open","headers","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","jsonObjectOrNull","JSON","parse","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","hostRegex","httpRegex","httpIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","opt_local","opt_writable","opt_xform","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","nameMapping","xformSize","size","sizeMapping","addRef","authWrapper","generateRef","makeStorageReference","fromResource","resource","type","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","map","token","base","queryString","alt","toResourceString","stringify","metadataValidator","validType","validate","specs","passed","minArgs","maxArgs","optional","validLength","validator","Error","ArgSpec","opt_optional","self","and_","v1","v2","stringSpec","opt_validator","stringValidator","uploadDataSpec","ArrayBuffer","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","isLooseObject","undefined","nullFunctionSpec","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","var_args","_i","arguments","bb","append","sliceBlob","blob","start","webkitSlice","mozSlice","FbsBlob","opt_elideCopy","blobType","data_","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","apply","uint8Arrays","finalLength_1","merged_1","index_1","uploadData","contains$1","elem","clone$1","arraylike","remove","splice","RequestInfo","handler","timeout","urlParams","body","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","getDownloadUrl","updateMetadata","Content-Type","deleteObject","determineContentType_","metadataForUpload_","opt_metadata","multipartUpload","X-Goog-Upload-Protocol","genBoundary","str","Math","random","boundary","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","opt_allowed","allowed","createResumableUpload","X-Goog-Upload-Command","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","getResumableUploadStatus","sizeString","parseInt","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","opt_status","opt_progressCallback","bytesLeft","bytesToUpload","min","uploadCommand","X-Goog-Upload-Offset","uploadStatus","newCurrent","Observer","nextOrObserver","opt_error","opt_complete","asFunctions","next","complete","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","async","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","currentSize","metadataRequest","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","_p","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","finishPromise_","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","newRef","service","put","throwIfRoot_","putString","delete","getDownloadURL","FailRequest","appDelete","RequestMap","map_","id_","addRequest","id","unmap","clear","AuthWrapper","app","maker","requestMaker","pool","bucket_","deleted_","app_","options","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","INTERNAL","getToken","response","accessToken","_error","request","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","waitMillis","mustStop","stopped","stop","wasTimeout","clearTimeout","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","doTheRequest","backoffCallback","RequestEndStatus","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","backoffDone","requestWentThrough","wasSuccessCode","result","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","addAuthHeader_","addVersionHeader_","number","a","SDK_VERSION","Service","authWrapperBucket","internals_","ServiceInternals","test","refFromURL","STORAGE_TYPE","factory","unused","opt_url","instance","namespaceExports","Storage","registerService","_interopDefault","ex","exports","firebase","tslib_1","util","_a","apiInstance","windowInstance","settingsServiceInstance","logger$1","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","Api","window","create","performance","PerformanceObserver","windowLocation","navigator","document","localStorage","perfMetrics","onFirstInputDelay","getUrl","href","mark","measure","measureName","mark1","mark2","getEntriesByType","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","setupObserver","entryType","list","getEntries","entry","observe","entryTypes","getInstance","setupApi","iid","VisibilityState","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","getProjectId","projectId","getApiKey","apiKey","getIidPromise","iidPromise","installations","getId","iidVal","getIid","getAuthTokenPromise","authTokenPromise","authTokenVal","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","PRERENDER","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","consoleLogger","Logger","logLevel","LogLevel","INFO","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","FIS_AUTH_PREFIX","getConfig","getStoredConfig","processConfig","getRemoteConfig","storeConfig","expiryString","getItem","configValid","configStringified","configResponse","setItem","Date","now","COULD_NOT_GET_CONFIG_MSG","configEndPoint","Request","Authorization","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","fetch","ok","json","info","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","expiry","samplingRate","initializationPromise","initializationStatus","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","handler_1","logger","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","processQueue","timeOffset","staged","log_event","evt","source_extension_json","event_time_ms","eventTime","request_time_ms","client_info","client_type","js_client_info","log_source","res","requestOffset","max","next_request_wait_millis","concat","addToQueue","ccHandler","serializer","_loggerInstance","_level","args","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","isAuto","sendTraceLog","log","logNetworkRequest","networkRequest","resourceType","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","keys","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","Trace","traceMeasureName","api","randomId","floor","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","traceName","record","startTime","duration","attributes","__assign","metrics","metric","incrementMetric","counter","num","putMetric","getMetric","putAttribute","attr","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","resources","resources_1","timeoutId_1","fid","measures","measures_1","PerformanceController","DEFAULT_ENTRY_NAME","registerPerformance","factoryMethod","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","assertionError","stringToByteArray","out","byteArrayToString","pos","c1","fromCharCode","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","console","deepCopy","deepExtend","target","source","constructor","dateValue","getTime","patchProperty","Deferred","promise","wrapCallback","getUA","isMobileCordova","isReactNative","isNodeSdk","ERROR_NAME","FirebaseError","_super","setPrototypeOf","captureStackTrace","__extends","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","warn","PATTERN","_","jsonEval","decode","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","isValidFormat","isAdmin","safeGet","fn","extend","objTo","objFrom","isEmpty","getCount","rv","opt_obj","findKey","opt_this","findValue","getAnyKey","getValues","every","querystring","querystringParams","arrayVal","querystringDecode","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","opt_offset","W","t","k","update","opt_length","lengthMinusBlock","inbuf","digest","totalBits","j","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","unsubscribes","observerCount","forEachObserver","close","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","sendOne","onError","methods","methods_1","validateArgCount","minCount","maxCount","argCount","argError","errorPrefix","argumentNumber","argName","validateNamespace","namespace","validateCallback","validateContextObject","context","stringToByteArray$1","high","low","stringLength"],"mappings":"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","file":"js/chunk-vendors~a6cd21c3.dfc154e9.js","sourcesContent":["import firebase from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, opt_contentType) {\r\n        this.data = data;\r\n        this.contentType = opt_contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, string) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(string));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, string));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(string) {\r\n    var b = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n        var c = string.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) == 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < string.length - 1 &&\r\n                        (string.charCodeAt(i + 1) & 64512) == 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = string.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) == 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(string) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, string) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = string.indexOf('-') !== -1;\r\n            var hasUnder = string.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = string.indexOf('+') !== -1;\r\n            var hasSlash = string.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            string = string.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(string) {\r\n    var parts = new DataURLParts(string);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(string) {\r\n    var parts = new DataURLParts(string);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\r\nfunction contains(obj, prop) {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nfunction forEach(obj, f) {\r\n    for (var key in obj) {\r\n        if (contains(obj, key)) {\r\n            f(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction clone(obj) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var c = {};\r\n    forEach(obj, function (key, val) {\r\n        c[key] = val;\r\n    });\r\n    return c;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\r\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\r\nfunction make(resolver) {\r\n    return new Promise(resolver);\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction resolve(value) {\r\n    return Promise.resolve(value);\r\n}\r\nfunction reject(error) {\r\n    return Promise.reject(error);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = make(function (resolve, reject) {\r\n            _this.xhr_.addEventListener('abort', function (event) {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function (event) {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function (event) {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\r\n        var _this = this;\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(opt_headers)) {\r\n            var headers = opt_headers;\r\n            forEach(headers, function (key, val) {\r\n                _this.xhr_.setRequestHeader(key, val.toString());\r\n            });\r\n        }\r\n        if (isDef(opt_body)) {\r\n            this.xhr_.send(opt_body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length == 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) {\r\n        return component.length > 0;\r\n    })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    forEach(params, function (key, val) {\r\n        var nextPart = encode(key) + '=' + encode(val);\r\n        queryPart = queryPart + nextPart + '&';\r\n    });\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\r\n        this.server = server;\r\n        this.local = opt_local || server;\r\n        this.writable = !!opt_writable;\r\n        this.xform = opt_xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    var valid = isString(fullPath);\r\n    if (!valid || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        fullPath = fullPath;\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(metadata, size) {\r\n        if (isDef(size)) {\r\n            return +size;\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    var validType = p && isObject(p);\r\n    if (!validType) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        var val = p[key];\r\n        if (key === 'customMetadata') {\r\n            if (!isObject(val)) {\r\n                throw 'Expected object for \\'customMetadata\\' mapping.';\r\n            }\r\n        }\r\n        else {\r\n            if (isNonNullObject(val)) {\r\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, opt_optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!opt_optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(opt_validator, opt_optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var validator;\r\n    if (opt_validator) {\r\n        validator = and_(stringValidator, opt_validator);\r\n    }\r\n    else {\r\n        validator = stringValidator;\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(opt_optional) {\r\n    return new ArgSpec(metadataValidator, opt_optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(opt_validator, opt_optional) {\r\n    function validator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (opt_validator !== undefined && opt_validator !== null) {\r\n            opt_validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction nullFunctionSpec(opt_optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < var_args.length; i++) {\r\n            bb.append(var_args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(var_args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, opt_elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = var_args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = var_args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\r\nfunction contains$1(array, elem) {\r\n    return array.indexOf(elem) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\r\nfunction clone$1(arraylike) {\r\n    return Array.prototype.slice.call(arraylike);\r\n}\r\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\r\nfunction remove(array, elem) {\r\n    var i = array.indexOf(elem);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(xhr, text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, opt_metadata) {\r\n    var metadata = clone(opt_metadata);\r\n    metadata['fullPath'] = location.path;\r\n    metadata['size'] = blob.size();\r\n    if (!metadata['contentType']) {\r\n        metadata['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadata;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var metadataString = toResourceString(metadata, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, opt_allowed) {\r\n    var status;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowed = opt_allowed || ['active'];\r\n    handlerCheck(contains$1(allowed, status));\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadata, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr, text) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr, text) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        var size = parseInt(sizeString, 10);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status = new ResumableUploadStatus(0, 0);\r\n    if (opt_status) {\r\n        status.current = opt_status.current;\r\n        status.total = opt_status.total;\r\n    }\r\n    else {\r\n        status.current = 0;\r\n        status.total = blob.size();\r\n    }\r\n    if (blob.size() !== status.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status.total - status.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = opt_progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, opt_error, opt_complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(opt_error) ||\r\n            isDef(opt_complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = opt_error || null;\r\n            this.complete = opt_complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        resolve(true).then(function () {\r\n            f.apply(null, argsToForward);\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = make(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded, total) {\r\n            _this.updateProgress_(sizeBefore + loaded);\r\n        };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        if (nextOrObserver === void 0) { nextOrObserver = undefined; }\r\n        if (error === void 0) { error = undefined; }\r\n        if (completed === void 0) { completed = undefined; }\r\n        function typeValidator(_p) {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, opt_complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        remove(this.observers_, observer);\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = clone$1(this.observers_);\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next !== null) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete !== null) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (string, format, opt_metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [\r\n            stringSpec(),\r\n            stringSpec(formatValidator, true),\r\n            metadataSpec(true)\r\n        ], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, string);\r\n        var metadata = clone(opt_metadata);\r\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\r\n            metadata['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(self.authWrapper, self.location);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (appDelete) {\r\n        if (appDelete === void 0) { appDelete = false; }\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map_ = {};\r\n        this.id_ = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (r) {\r\n        var id = this.id_;\r\n        this.id_++;\r\n        this.map_[id] = r;\r\n        var self = this;\r\n        function unmap() {\r\n            delete self.map_[id];\r\n        }\r\n        r.getPromise().then(unmap, unmap);\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        forEach(this.map_, function (key, val) {\r\n            if (val) {\r\n                val.cancel(true);\r\n            }\r\n        });\r\n        this.map_ = {};\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function (_error) {\r\n                return null;\r\n            });\r\n        }\r\n        else {\r\n            return resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, arguments);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        var self = this;\r\n        this.promise_ = make(function (resolve, reject) {\r\n            self.resolve_ = resolve;\r\n            self.reject_ = reject;\r\n            self.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = contains$1(self.successCodes_, status);\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_\r\n                            ? appDeleted()\r\n                            : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = contains$1(extraRetryCodes, status);\r\n        var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!opt_canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = clone(requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return resolve(undefined);\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, opt_url) {\r\n    return new Service(app, new XhrIoPool(), opt_url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib_1 = require('tslib');\nvar util = require('@firebase/util');\nrequire('@firebase/installations');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = '0.2.1';\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        this.localStorage = window.localStorage;\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark)\r\n            return;\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure)\r\n            return;\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType)\r\n            return [];\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName)\r\n            return [];\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver)\r\n            return;\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getId();\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance()\r\n        .firebaseAppInstance.installations()\r\n        .getToken();\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n    VisibilityState[VisibilityState[\"PRERENDER\"] = 3] = \"PRERENDER\";\r\n    VisibilityState[VisibilityState[\"UNLOADED\"] = 4] = \"UNLOADED\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        case 'prerender':\r\n            return VisibilityState.PRERENDER;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar SECONDARY_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(function (config) { return processConfig(config); })\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */ function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString))\r\n        return;\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified)\r\n        return;\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    if (!config)\r\n        return;\r\n    var localStorage = Api.getInstance().localStorage;\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: FIS_AUTH_PREFIX + \" \" + authToken\r\n            },\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config)\r\n        return config;\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\nvar queue = [];\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        // Capture a snapshot of the queue and empty the \"official queue\".\r\n        var staged = queue.slice();\r\n        queue = [];\r\n        // We will pass the JSON serialized event to the backend.\r\n        var log_event = staged.map(function (evt) { return ({\r\n            source_extension_json: evt.message,\r\n            event_time_ms: String(evt.eventTime)\r\n        }); });\r\n        var data = {\r\n            request_time_ms: String(Date.now()),\r\n            client_info: {\r\n                client_type: 1,\r\n                js_client_info: {}\r\n            },\r\n            log_source: SettingsService.getInstance().logSource,\r\n            log_event: log_event\r\n        };\r\n        fetch(SettingsService.getInstance().logEndPointUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(function (res) {\r\n            if (!res.ok) {\r\n                consoleLogger.info('Call to Firebase backend failed.');\r\n            }\r\n            return res.json();\r\n        })\r\n            .then(function (res) {\r\n            // Find the next call wait time from the response.\r\n            var requestOffset = Math.max(DEFAULT_SEND_INTERVAL_MS, parseInt(res.next_request_wait_millis, 10));\r\n            remainingTries = DEFAULT_REMAINING_TRIES;\r\n            // Schedule the next process.\r\n            processQueue(requestOffset);\r\n        })\r\n            .catch(function () {\r\n            /**\r\n             * If the request fails for some reason, add the events that were attempted\r\n             * back to the primary queue to retry later.\r\n             */\r\n            queue = staged.concat(queue);\r\n            remainingTries--;\r\n            consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n            processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        });\r\n    }, timeOffset);\r\n}\r\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = queue.concat([evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction ccHandler(serializer) {\r\n    // The underscores for loggerInstance and level parameters are added to avoid the\r\n    // noUnusedParameters related error.\r\n    return function (_loggerInstance, _level) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction getLogger() {\r\n    if (logger)\r\n        return logger;\r\n    var ccLogger = ccHandler(serializer);\r\n    logger = new logger$1.Logger('@firebase/performance/cc');\r\n    logger.logHandler = ccLogger;\r\n    return logger;\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto)\r\n        return;\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto)\r\n        return;\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE)\r\n        return;\r\n    if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling)\r\n        return;\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (getIid()) {\r\n        setTimeout(function () { return getLogger().log(trace, 1 /* Trace */); }, 0);\r\n    }\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled)\r\n        return;\r\n    // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\r\n    if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0])\r\n        return;\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling)\r\n        return;\r\n    setTimeout(function () { return getLogger().log(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: 1,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = convertToKeyValueArray(trace.counters);\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\r\nfunction convertToKeyValueArray(obj) {\r\n    var keys = Object.keys(obj);\r\n    return keys.map(function (key) { return ({ key: key, value: obj[key] }); });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = tslib_1.__assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, num) {\r\n        if (num === void 0) { num = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.counters[counter] = 0;\r\n        }\r\n        this.counters[counter] += num;\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist.\r\n     * @param counter Name of the custom metric\r\n     * @param num Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, num) {\r\n        this.counters[counter] = num;\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        this.customAttributes[attr] = value;\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined)\r\n            return;\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return tslib_1.__assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route)\r\n            return;\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.incrementMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.incrementMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.incrementMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.incrementMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.incrementMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.incrementMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined)\r\n        return;\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid())\r\n        return;\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX)\r\n        return;\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        getInitializationPromise().then(setupOobResources, setupOobResources);\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    var namespaceExports = {};\r\n    instance.INTERNAL.registerService('performance', factoryMethod, namespaceExports);\r\n}\r\nif (window && fetch && Promise) {\r\n    setupApi(window);\r\n    registerPerformance(firebase);\r\n}\r\nelse {\r\n    consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise.');\r\n}\n\nexports.registerPerformance = registerPerformance;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FirebaseError, _super);\r\n    function FirebaseError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === void 0) { data = {}; }\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, data) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage);\r\n        // Keys with an underscore at the end of their name are not included in\r\n        // error.data for some reason.\r\n        // TODO: Replace with Object.entries when lib is updated to es2017.\r\n        for (var _i = 0, _a = Object.keys(data); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (key.slice(-1) !== '_') {\r\n                if (key in error) {\r\n                    console.warn(\"Overwriting FirebaseError base field \\\"\" + key + \"\\\" can cause unexpected behavior.\");\r\n                }\r\n                error[key] = data[key];\r\n            }\r\n        }\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? value.toString() : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.CONSTANTS = CONSTANTS;\nexports.Deferred = Deferred;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.Sha1 = Sha1;\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.async = async;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.clone = clone;\nexports.contains = contains;\nexports.createSubscribe = createSubscribe;\nexports.decode = decode;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.errorPrefix = errorPrefix;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getUA = getUA;\nexports.getValues = getValues;\nexports.isAdmin = isAdmin;\nexports.isEmpty = isEmpty;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isNonNullObject = isNonNullObject;\nexports.isReactNative = isReactNative;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.issuedAtTime = issuedAtTime;\nexports.jsonEval = jsonEval;\nexports.map = map;\nexports.patchProperty = patchProperty;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.safeGet = safeGet;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\nexports.stringify = stringify;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\n//# sourceMappingURL=index.cjs.js.map\n"],"sourceRoot":""}
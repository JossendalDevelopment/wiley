{"version":3,"sources":["webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js"],"names":["__webpack_require__","d","__webpack_exports__","decrypt","Decrypter","AsyncStream","pkcs7__WEBPACK_IMPORTED_MODULE_0__","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","precompute","tables","encTable","decTable","sbox","sboxInv","x","xInv","th","x2","x4","x8","s","tEnc","tDec","slice","aesTables","AES","this","_tables","j","tmp","encKey","decKey","keyLen","rcon","Error","_key","encrypted0","encrypted1","encrypted2","encrypted3","out","offset","a","b","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","Stream","listeners","on","type","listener","push","off","index","indexOf","splice","trigger","callbacks","arguments","args","Array","_length","_i","apply","dispose","pipe","destination","data","_Stream","_this","jobs","delay","timeout_","processJob_","shift","setTimeout","bind","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","buffer","byteOffset","byteLength","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","done","step","STEP","asyncStream_","decryptChunk_","subarray","Uint32Array","bytes","set","get"],"mappings":"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","file":"js/chunk-vendors~6b994d92.1f9cc437.js","sourcesContent":["import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/date-fns/start_of_day/index.js","webpack:///./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","webpack:///./node_modules/date-fns/start_of_iso_year/index.js","webpack:///./node_modules/date-fns/locale/en/index.js","webpack:///./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/get_day_of_year/index.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/date-fns/format/index.js","webpack:///./node_modules/date-fns/is_valid/index.js","webpack:///./node_modules/date-fns/get_iso_week/index.js","webpack:///./node_modules/date-fns/get_iso_year/index.js","webpack:///./node_modules/firebase/dist/index.cjs.js","webpack:///./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js","webpack:///./node_modules/idb/build/idb.js","webpack:///./node_modules/date-fns/start_of_year/index.js","webpack:///./node_modules/date-fns/is_date/index.js","webpack:///./node_modules/date-fns/start_of_iso_week/index.js","webpack:///./node_modules/date-fns/start_of_week/index.js","webpack:///./node_modules/date-fns/parse/index.js","webpack:///./node_modules/date-fns/difference_in_calendar_days/index.js","webpack:///./node_modules/date-fns/locale/en/build_format_locale/index.js","webpack:///./node_modules/firebase/auth/dist/index.esm.js"],"names":["parse","__webpack_require__","startOfDay","dirtyDate","date","setHours","module","exports","buildDistanceInWordsLocale","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","localize","token","count","options","result","replace","addSuffix","comparison","getISOYear","startOfISOWeek","startOfISOYear","year","fourthOfJanuary","Date","setFullYear","buildFormatLocale","distanceInWords","format","MILLISECONDS_IN_MINUTE","getTime","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","startOfYear","differenceInCalendarDays","getDayOfYear","diff","dayOfYear","_interopDefault","ex","firebase","getISOWeek","isValid","enLocale","dirtyFormatStr","dirtyOptions","formatStr","String","locale","localeFormatters","formatters","formattingTokensRegExp","formatFn","buildFormatFn","M","getMonth","MM","addLeadingZeros","Q","Math","ceil","D","getDate","DD","DDD","DDDD","d","getDay","E","W","WW","YY","getFullYear","substr","YYYY","GG","GGGG","H","getHours","HH","h","hours","hh","m","getMinutes","mm","s","getSeconds","ss","S","floor","getMilliseconds","SS","SSS","Z","formatTimezone","ZZ","X","x","i","formatter","array","match","length","removeFormattingTokens","output","Function","input","offset","delimeter","sign","absOffset","abs","minutes","number","targetLength","toString","isDate","isNaN","TypeError","call","MILLISECONDS_IN_WEEK","round","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","console","warn","commonFormatterKeys","buildFormattingTokensRegExp","formatterKeys","key","hasOwnProperty","push","formattingTokens","concat","sort","reverse","RegExp","join","global","factory","this","toArray","arr","Array","prototype","slice","promisifyRequest","request","Promise","resolve","reject","onsuccess","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","openDb","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","callback","nativeObject","getAll","query","instance","items","iterateCursor","undefined","continue","cleanDate","argument","startOfWeek","weekStartsOn","Number","day","setDate","getTimezoneOffsetInMilliseconds","MILLISECONDS_IN_HOUR","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","restDateString","parseDate","timestamp","time","parseTime","timezone","parseTimezone","fullTime","fullTimeDate","fullTimeDateNextDay","offsetDiff","dateString","timeString","split","test","exec","parseTokenYYY","parseTokenYYYYY","yearString","parseInt","centuryString","month","week","setUTCFullYear","dayOfISOYear","dayOfWeek","parseFloat","seconds","timezoneString","absoluteOffset","isoYear","fourthOfJanuaryDay","getUTCDay","setUTCDate","getUTCDate","MILLISECONDS_IN_DAY","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","MMM","MMMM","dd","ddd","dddd","A","a","aa","ordinalFormatters","formatterToken","ordinal","rem100"],"mappings":"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","file":"js/chunk-vendors~b5906859.ae945b7c.js","sourcesContent":["var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/auth');\nrequire('@firebase/database');\nrequire('@firebase/firestore');\nrequire('@firebase/functions');\nrequire('@firebase/messaging');\nrequire('@firebase/storage');\nrequire('@firebase/performance');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconsole.warn(\"\\nIt looks like you're using the development build of the Firebase JS SDK.\\nWhen deploying Firebase apps to production, it is advisable to only import\\nthe individual SDK components you intend to use.\\n\\nFor the module builds, these are available in the following manner\\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\\n\\nCommonJS Modules:\\nconst firebase = require('firebase/app');\\nrequire('firebase/<PACKAGE>');\\n\\nES Modules:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\\nTypescript:\\nimport * as firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\");\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js')\nvar isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","import '@firebase/auth';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}